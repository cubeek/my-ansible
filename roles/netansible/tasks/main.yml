# Ironic devstack will create virtual baremetals and plug them into an ovs
# bridge called brbm. We will instead plug them into their own separate
# linux bridges, and connect each bridge to an interface that has an
# underlying UDP patch to a virtual appliance
#
- name: add virtualbaremetal bridges
  command: "brctl addbr {{ item }}"
  with_items:
    - vbm0
    - vbm1
  become: true

- name: remove ovs ports
  command: "ovs-vsctl del-port ovs-node-{{ item }}"
  with_items:
    - "0i1"
    - "0i2"
    - "1i1"
    - "1i2"
  become: true

- name: add virtualbaremetal veth pairs to bridges
  command: "brctl addif vbm{{ item }} ovs-node-{{ item }}i1"
  with_items:
    - "0"
    - "1"
  become: true

- name: create clean ports script
  template:
    src: clean_ports.sh.j2
    dest: "{{ devstack_dir }}/clean_ports.sh"

- name: run clean portscript
  shell: "bash {{ devstack_dir }}/clean_ports.sh"

#5. Provisioning Network and Flavor Configuration
# Provisioning/cleaning Network Configuration
#openstack network create --provider-network-type flat --provider-physical-network provisioning provisioning
#
- name: find provisioning network
  shell: "{{ openrc_admin }} && openstack network list | grep provisioning"
  ignore_errors: true
  become: true
  register: provisioning_network

- name: create provisioning network
  shell: "{{ openrc_admin }}  && openstack network create --external --share --provider-network-type flat --provider-physical-network provisioning provisioning"
  become: true
  when: provisioning_network.rc != 0

- name: find provisioning subnet
  shell: "{{ openrc_admin }}  && openstack subnet list | grep provisioning"
  ignore_errors: true
  become: true
  register: provisioning_subnet

- name: create provisioning subnet
  shell: "{{ openrc_admin }}  && openstack subnet create --network provisioning --subnet-range 192.168.2.0/24 --gateway 192.168.2.1 --allocation-pool start=192.168.2.100,end=192.168.2.200 provisioning-subnet"
  become: true
  when: provisioning_subnet.rc != 0


## Provisioning flavor configuration
- name: find baremetal flavor
  shell: "{{ openrc_admin }}  && openstack flavor list | grep baremetal"
  ignore_errors: true
  become: true
  register: baremetal_flavor

#openstack flavor create --ram 1024 --disk 20 --vcpus 1 baremetal
- name: create flavor
  shell: "{{ openrc_admin }}  && openstack flavor create --ram 1024 --disk 20 --vcpus 1 baremetal"
  become: true
  when: baremetal_flavor.rc != 0
#openstack flavor set baremetal --property "capabilities:profile"="baremetal" --property capabilities:boot_option="local"
- name: set flavor profile
  shell: "{{ openrc_admin }}  && openstack flavor set baremetal --property \"capabilities:profile\"=\"baremetal\" --property capabilities:boot_option=\"local\""
  become: true
  when: baremetal_flavor.rc != 0

##openstack flavor set baremetal --property resources:CUSTOM_BAREMETAL=1
- name: set flavor CUSTOM_BAREMETAL
  shell: "{{ openrc_admin }}  && openstack flavor set baremetal --property resources:CUSTOM_BAREMETAL=1"
  become: true
  when: baremetal_flavor.rc != 0

#openstack flavor set  VCPU
- name: set flavor vcpu
  shell: "{{ openrc_admin }}  && openstack flavor set baremetal --property resources:VCPU=0"
  become: true
  when: baremetal_flavor.rc != 0

#openstack flavor set baremetal --property resources:MEMORY_MB=0
- name: set flavor memory
  shell: "{{ openrc_admin }}  && openstack flavor set baremetal --property resources:MEMORY_MB=0"
  become: true
  when: baremetal_flavor.rc != 0

#openstack flavor set baremetal --property resources:DISK_GB=0
- name: set flavor disk gb
  shell: "{{ openrc_admin }}  && openstack flavor set baremetal --property resources:DISK_GB=0"
  become: true
  when: baremetal_flavor.rc != 0

- name: find baremetal host aggregate
  shell: "{{ openrc_admin }}  && openstack aggregate list | grep baremetal-hosts"
  ignore_errors: true
  become: true
  register: baremetal_aggregate

#openstack aggregate create --property baremetal=true baremetal-hosts
- name: create baremetal host aggregate
  shell: "{{ openrc_admin }}  && openstack aggregate create --property baremetal=true baremetal-hosts"
  become: true
  when: baremetal_aggregate.rc != 0

- name: find virtual host aggregate
  shell: "{{ openrc_admin }}  && openstack aggregate list | grep virtual-hosts"
  ignore_errors: true
  become: true
  register: virtual_aggregate

#openstack aggregate create --property baremetal=false virtual-hosts
- name: create virtual host aggregate
  shell: "{{ openrc_admin }}  && openstack aggregate create --property baremetal=false virtual-hosts"
  become: true
  when: virtual_aggregate.rc != 0

- name: find controller in baremetal aggregate
  shell: "{{ openrc_admin }}  && openstack aggregate show baremetal-hosts | grep overcloud-controller"
  ignore_errors: true
  become: true
  register: controller_aggregate

# openstack aggregate add host baremetal-hosts overcloud-controller-0.opnfvlf.org
- name: add controller to baremetal aggregate
  shell: "{{ openrc_admin }}  && openstack aggregate add host baremetal-hosts devstack"
  become: true
  when: controller_aggregate.rc != 0

#openstack flavor set baremetal --property baremetal=true
- name: set baremetal property in flavor
  shell: "{{ openrc_admin }}  && openstack flavor set baremetal --property baremetal=true"
  become: true
  when: baremetal_flavor.rc != 0

- name: find virtual flavor
  shell: "{{ openrc_admin }}  && openstack flavor list | grep virtual"
  ignore_errors: true
  become: true
  register: virtual_flavor

#openstack flavor create --ram 1024 --disk 20 --vcpus 1 virtual
- name: create virtual flavor
  shell: "{{ openrc_admin }}  && openstack flavor create --ram 1024 --disk 20 --vcpus 1 virtual"
  become: true
  when: virtual_flavor.rc != 0

#openstack flavor set virtual --property baremetal=false

- name: set virtual flavor to baremetal false
  shell: "{{ openrc_admin }}  && openstack flavor set virtual --property baremetal=\"false\""
  become: true
  when: virtual_flavor.rc != 0

- name: configure baremetal
  include: configure_node.yml nodename={{item}}
  with_items:
    - "node-0"
    - "node-1"
